!alias af embed 
<drac2>
#Basic Setup
using(S="987a9cee-17d5-4d1f-8b91-c30ebd413320")
using(M="a03534d1-5faf-413a-b895-e70186920c91")
syntax=f'{ctx.prefix}{ctx.alias} [amount / xp / gp + amount]'
thumb=f'-thumb {image}'
suffix=f'-color {color} -footer "{syntax}" {thumb}'
args,ch = &ARGS&,character()
gp = ch.coinpurse.get_coins()['gp']
ch.set_cvar_nx("ancientFragments", 0)
af = int(ancientFragments)
lvl=get('level')
ch.set_cvar_nx("xp", "+900")
_xp=int(xp)
REWARDS={(1,4):1500,(5,8):2500,(9,12):5000,(13,16):7000,(17,20):12000}

if len(args)==0: return f'embed -title "{name}\'s Fragments" -desc "Ancient Fragments: {af} / 200" {suffix}'
if args[0]=="xp": 
    if af<110: return f'embed -title "{name} looks at the counter." -desc "You don\'t have enough Ancient Fragments." {suffix}'
    for (L,H) in REWARDS.items():
        if L[0]<=lvl<=L[1]: ch.set_cvar('xp','+'+str(_xp+H));break
    ch.set_cvar("ancientFragments",af-110)
    return f'embed -title "{name} buys a blessing." -desc "### Experience gained: {S.nr_format(int(xp)-_xp)} XP\nAncient Fragments: {af-110} / 200 (-110)" {suffix}'
if args[0]=="gp" and len(args)==1: return f'embed -title "{name} looks at the counter." -desc "You forgot to specify how much GP do you want to buy." {suffix}'
if args[0]=="gp" and len(args)==2:
    _gp, _af = M.merchant(gp, int(args[1]), af, lvl)
    ch.set_cvar("ancientFragments",_af)
    ch.coinpurse.modify_coins(gp=_gp-gp)
    return f'embed -title "{name} looks at the counter." -desc "### Gold gained: {_gp-gp} GP\nAncient Fragments: {_af} / 200 (-{af-_af})" {suffix}'
if len(args)==1:
    _af=int(args[0])
    af+=_af
    if af>200:af=200
    if af<0:af=0
    if _af>0:_af=f"+{_af}"
    ch.set_cvar("ancientFragments",af)
    return f'embed -title "{name} gains some Fragments." -desc "Ancient Fragments: {af} / 200 ({_af})" {suffix}'
</drac2>