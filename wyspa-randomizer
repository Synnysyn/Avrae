<drac2>
###########################
# TRAVEL GVAR aka WYSPA
###########################

def ext_roll(text):
    while '[' in text and ']' in text:
        start_idx = text.index('[')
        end_idx = text.index(']', start_idx)
        to_roll = text[start_idx+1:end_idx]
        text = text[:start_idx] + roll(to_roll) + text[end_idx+1:]
    return text


def travel(gvar, lvl, history, result = False, syntax = "!mine", fragments = 0, exp_time = 0, new_exp = False, INTERVAL=300):
    #Gvary
    enc_list = []
    for i in gvar:
        enc_list.append(load_yaml(get_gvar(i)))
    enc_list_raw = {}
    enc_list_raw = {}
    for d in enc_list:
        enc_list_raw.update(d)
    fragments = int(fragments)

    if new_exp == True:
        history = {}
        fragments = 0
        exp_time = 0
    
    # Definicja encountera, który będzie zwracany razem z wpisem do historii
    encounter = {
        "T": "Tytuł",
        "D1": "Opis",
        "D2": "Info na temat checku",
        "D3": "Tagi",
        "D4": "Pomoc, dolny pasek",
        "C": "#7DDA58"
    }

    # Sprawdzenie historii
    enc_type = ""
    history = load_yaml(history)
    h_nr = {"Story": 0,"Combat": 0,"Miniboss": 0,"Trap": 0,"Check": 0,"Treasure": 0}
    for i in history:
        h_nr[history[i]["type"]] += 1

    # Jeżeli encounter potrzebuje informacji zwrotnej, to przesyłamy odpowiedni tekst
    if result == "win" or "Win" or "wwin":
        if history == {}: return
        last_item = list(history.values())[-1]
        last_enc = enc_list_raw[last_item['id']]
        if last_enc["type"] == "Check":
            fragments += last_enc["fragments"]
            encounter["T"] = "Odnieśliście sukces!"
            encounter["D1"] = last_enc["desc"]
            encounter["D2"] = last_enc["win"]
            encounter["D3"] = f"Możesz kontynuuować ekspedycję."
            encounter["D4"] = f"Antyczne Fragmenty: {fragments} | Postęp: {(len(history))*10}%"
            encounter["C"] = "#556B2F"
            return encounter, history, fragments, exp_time
    
    if result == "fail":
        if history == {}: return
        last_item = list(history.values())[-1]
        last_enc = enc_list_raw[last_item['id']]
        if last_enc["type"] == "Check":
            encounter["T"] = "Odnieśliście porażkę."
            encounter["D1"] = last_enc["desc"]
            encounter["D2"] = last_enc["fail"]
            encounter["D3"] = f"Możesz kontynuuować ekspedycję."
            encounter["D4"] = f"Antyczne Fragmenty: {fragments} | Postęp: {(len(history))*10}%"
            encounter["C"] = "#556B2F"
            return encounter, history, fragments, exp_time

    exp_time=float(exp_time)
    curr_time=time()//1
    if exp_time >= curr_time:
        encounter = {
        "T": "Ekspedycja podróżuje.",
        "D1": "",
        "D2": f"Użyj komendy ponownie <t:{round(exp_time)}:R>",
        "D3": "Możesz odegrać scenkę w RP w oczekiwaniu na następne wydarzenie.",
        "D4": f"Antyczne Fragmenty: {fragments} | Postęp: {(len(history))*10}%",
        "C": "#556B2F"
        }
        return encounter, history, fragments, exp_time

    # Wybór encountera
    options = []
    if h_nr["Story"] < 3: options.append("Story")
    if h_nr["Check"] < 3: options.append("Check")
    if h_nr["Trap"] < 3: options.append("Trap")
    if h_nr["Combat"] == 0 and len(history) <= 4: options.append("Combat")
    if h_nr["Combat"] <= 1 and 4 < len(history) <= 8: options.append("Combat")
    enc_type = randchoice(options)

    if len(history) == 4 and h_nr["Combat"] == 0: enc_type = "Combat"
    if len(history) == 8 and h_nr["Combat"] <= 1: enc_type = "Combat"
    if len(history) <= 8 and h_nr["Miniboss"] == 0 and randint(48) == 0: enc_type = "Miniboss"
    if len(history) == 0: enc_type = "Story"
    if len(history) == 9: enc_type = "Treasure"
    if len(history) == 10:
        enc_type = "Story"
        history = {}
        fragments = 0
        exp_time = 0
    
    
    # Wyfiltrowanie nowego encountera
    all_ids = [value['id'] for value in history.values()]
    viable_enc = []
    for key, value in enc_list_raw.items():
        if value["type"] == enc_type and value["level"]["min"] <= lvl <= value["level"]["max"]:
            if key not in all_ids:
                value_with_key = value.copy()
                value_with_key["key"] = key
                viable_enc.append(value_with_key)
    
    if viable_enc == []:
        encounter = {
        "T": "Nic nie znaleźliście.",
        "D1": "Mimo usilnych starań, nie udało się znaleźć godnego was zagrożenia, zagadki lub nagrody. Może spróbuj na innym poziomie?",
        "D2": "Ekspedycja nieudana.",
        "D3": f"Nie znaleziono wyzwania {enc_type} na poziom prowadzącego.",
        "D4": "Postęp: Ekspedycja porzucona.",
        "C": "#4169E1"
        }
        exp_time = time()//1 + INTERVAL
        return encounter, history, fragments, exp_time

    new_enc = randchoice(viable_enc)

    # Przygotowanie encountera do wyświetlenia
    encounter["D1"] = new_enc["desc"]
    
    if enc_type == "Story":
        encounter["T"] = "Ekspedycja przeszukuje okolicę."
        encounter["D2"] = "Ruszacie bezpiecznie dalej."
        encounter["D3"] = "Możesz odegrać scenkę w RP w oczekiwaniu na następne wydarzenie."
        encounter["C"] = "#4169E1"

    if enc_type == "Combat":
        encounter["T"] = "Ekspedycja napotyka wrogów!"
        encounter["D2"] = ext_roll(new_enc["bold"])
        encounter["D3"] = ext_roll(new_enc["info"])
        encounter["C"] = "#CE2029"

    if enc_type == "Miniboss":
        fragments += new_enc["fragments"]
        encounter["T"] = "Ekspedycja trafia na antyczne zło!"
        encounter["D2"] = ext_roll(new_enc["bold"])
        encounter["D3"] = ext_roll(new_enc["info"])
        encounter["C"] = "#9f00C5"
        
    if enc_type == "Trap":
        encounter["T"] = "Ekspedycja wpada w kłopoty."
        encounter["D2"] = ext_roll(new_enc["bold"])
        encounter["D3"] = ext_roll(new_enc["info"])
        encounter["C"] = "#367588"
    
    if enc_type == "Check":
        encounter["T"] = "Ekspedycja odnajduje coś ciekawego."
        encounter["D2"] = ext_roll(new_enc["bold"])
        encounter["D3"] = f"Użyj **{syntax} [win/fail]** aby zobaczyć efekt."
        encounter["C"] = "#556B2F"
    
    if enc_type == "Treasure":
        fragments += new_enc["fragments"]
        encounter["T"] = "Ekspedycja dotarła do końca."
        bonus_frag = 0
        while fragments % 6 != 0:
            fragments += 1
            bonus_frag += 1
        if bonus_frag == 0:
            encounter["D3"] = f"Podczas tej ekspedycji zebraliście łącznie {fragments} AF."
        else:
            encounter["D3"] = f"Dokładniej przeszukując znaleźliście jeszcze {bonus_frag} AF i zebraliście łącznie {fragments} AF podczas tej ekspedycji."
        encounter["D2"] = ext_roll(new_enc["info"])
        encounter["C"] = "#DAA520"
        

    # Przekazanie Info
    exp_time = time()//1 + INTERVAL
    encounter["D4"] = f"Antyczne Fragmenty: {fragments} | Postęp: {(len(history)+1)*10}%"
    history[len(history)+1] = {"type": enc_type,"id":new_enc["key"]}
    return encounter, history, fragments, exp_time